#!/bin/bash
# –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –¥–µ—Ç–µ–∫—Ç–æ—Ä–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤

set -euo pipefail

echo "üîß –¢–ï–°–¢ –î–ï–¢–ï–ö–¢–û–†–û–í –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í"
echo "==============================="

echo ""
echo "1Ô∏è‚É£ –¢–µ–∫—É—â–∞—è —Å–∏—Å—Ç–µ–º–∞:"
echo "------------------"
echo "–û–°: $(uname -s) $(uname -m)"
if command -v sw_vers >/dev/null 2>&1; then
    echo "macOS: $(sw_vers -productVersion)"
fi

echo ""
echo "2Ô∏è‚É£ Homebrew —Å—Ç–∞—Ç—É—Å:"
echo "------------------"
if command -v brew >/dev/null 2>&1; then
    echo "‚úÖ Homebrew: $(brew --prefix)"
    echo "   –í–µ—Ä—Å–∏—è: $(brew --version | head -1)"
else
    echo "‚ùå Homebrew –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo ""
echo "3Ô∏è‚É£ –î–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:"
echo "------------------------------"
if [[ -f ".bazelrc.local" ]]; then
    echo "–ò–∑ .bazelrc.local:"
    grep "action_env" .bazelrc.local | while read -r line; do
        tool=$(echo "$line" | sed 's/.*action_env=\([^=]*\)=.*/\1/')
        path=$(echo "$line" | sed 's/.*action_env=[^=]*=\(.*\)/\1/')
        if [[ -f "$path" ]]; then
            echo "   ‚úÖ $tool: $path"
        else
            echo "   ‚ùå $tool: $path (–Ω–µ –Ω–∞–π–¥–µ–Ω)"
        fi
    done
else
    echo "‚ùå .bazelrc.local –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π:"
echo "------------------"

check_tool_version() {
    local tool_name="$1"
    local env_var="$2"
    
    if [[ -f ".bazelrc.local" ]] && grep -q "$env_var=" .bazelrc.local; then
        local tool_path=$(grep "$env_var=" .bazelrc.local | head -1 | sed "s/.*$env_var=\(.*\)/\1/")
        if [[ -f "$tool_path" ]]; then
            echo "üîç $tool_name ($tool_path):"
            case "$tool_name" in
                make)
                    "$tool_path" --version 2>/dev/null | head -1 | sed 's/^/   /'
                    ;;
                cmake)
                    "$tool_path" --version 2>/dev/null | head -1 | sed 's/^/   /'
                    ;;
                ninja)
                    "$tool_path" --version 2>/dev/null | sed 's/^/   /'
                    ;;
                pkg-config)
                    "$tool_path" --version 2>/dev/null | sed 's/^/   /'
                    ;;
            esac
        else
            echo "‚ùå $tool_name: –ø—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ($tool_path)"
        fi
    else
        echo "‚ö†Ô∏è  $tool_name: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
}

check_tool_version "make" "MAKE"
check_tool_version "cmake" "CMAKE"
check_tool_version "ninja" "NINJA"
check_tool_version "pkg-config" "PKG_CONFIG"

echo ""
echo "5Ô∏è‚É£ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏:"
echo "-------------------------"

echo "Make –≤–∞—Ä–∏–∞–Ω—Ç—ã:"
for path in "/usr/bin/make" "/opt/homebrew/bin/make" "/opt/homebrew/bin/gmake" "/usr/local/bin/make" "/usr/local/bin/gmake"; do
    if [[ -f "$path" ]]; then
        version=$("$path" --version 2>/dev/null | head -1)
        echo "   ‚úÖ $path - $version"
    else
        echo "   ‚ùå $path"
    fi
done

echo ""
echo "CMake –≤–∞—Ä–∏–∞–Ω—Ç—ã:"
for path in "/Applications/CMake.app/Contents/bin/cmake" "/opt/homebrew/bin/cmake" "/usr/local/bin/cmake" "/usr/bin/cmake"; do
    if [[ -f "$path" ]]; then
        version=$("$path" --version 2>/dev/null | head -1)
        echo "   ‚úÖ $path - $version"
    else
        echo "   ‚ùå $path"
    fi
done

echo ""
echo "6Ô∏è‚É£ –¢–µ—Å—Ç —Å–±–æ—Ä–∫–∏:"
echo "--------------"
echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–±–æ—Ä–∫–∏..."
if bazel build //src:pkg-log --nobuild >/dev/null 2>&1; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞ - —Å–±–æ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
fi

echo ""
echo "7Ô∏è‚É£ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "---------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å
recommendations=()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ make
if grep -q "MAKE=/usr/bin/make" .bazelrc.local 2>/dev/null; then
    recommendations+=("üîÑ –û–±–Ω–æ–≤–∏—Ç—å make: brew install make (—Ç–µ–∫—É—â–∏–π —É—Å—Ç–∞—Ä–µ–≤—à–∏–π)")
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ cmake
if ! grep -q "CMAKE=" .bazelrc.local 2>/dev/null; then
    recommendations+=("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å CMake: brew install cmake")
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ninja
if ! grep -q "NINJA=" .bazelrc.local 2>/dev/null; then
    recommendations+=("‚ö° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Ninja: brew install ninja (—É—Å–∫–æ—Ä–∏—Ç —Å–±–æ—Ä–∫—É)")
fi

if [[ ${#recommendations[@]} -eq 0 ]]; then
    echo "‚úÖ –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
else
    for rec in "${recommendations[@]}"; do
        echo "$rec"
    done
fi

echo ""
echo "8Ô∏è‚É£ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è:"
echo "------------------------"
echo "# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞–≤—Ç–æ–¥–µ—Ç–µ–∫—Ç:"
echo "./tools/bazel/platform_detection.sh"
echo ""
echo "# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä:"
echo "brew install make cmake ninja pkg-config"
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:"
echo "./tools/bazel/test_tool_detection.sh"

echo ""
echo "üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:"
echo "==================="
if bazel info >/dev/null 2>&1; then
    echo "‚úÖ Bazel —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    echo "‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π Bazel"
fi