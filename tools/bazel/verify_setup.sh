#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Bazel

set -euo pipefail

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"
cd "$PROJECT_ROOT"

echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Bazel"
echo "========================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
echo ""
echo "üìÅ –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –§–ê–ô–õ–û–í"
echo "----------------------------"

REQUIRED_FILES=(
    ".bazelrc"
    "tools/bazel/configs/common.bazelrc"
    "tools/bazel/configs/platforms.bazelrc"
    "tools/bazel/configs/targets.bazelrc"
    "tools/bazel/configs/modes.bazelrc"
    "tools/bazel/platform_detection.sh"
    "tools/bazel/build.sh"
    "tools/bazel/README.md"
)

ALL_FILES_OK=true
for file in "${REQUIRED_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file - –Ω–µ –Ω–∞–π–¥–µ–Ω"
        ALL_FILES_OK=false
    fi
done

if [[ "$ALL_FILES_OK" == "false" ]]; then
    echo ""
    echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ –≥–ª–∞–≤–Ω–æ–º .bazelrc
echo ""
echo "üìã –ü–†–û–í–ï–†–ö–ê –ò–ú–ü–û–†–¢–û–í"
echo "--------------------"

IMPORTS_OK=true
for config_file in tools/bazel/configs/*.bazelrc; do
    config_name=$(basename "$config_file")
    if grep -q "try-import.*$config_name" .bazelrc; then
        echo "‚úÖ $config_name –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω"
    else
        echo "‚ùå $config_name –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ .bazelrc"
        IMPORTS_OK=false
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .bazelrc.local
echo ""
echo "üîß –ü–†–û–í–ï–†–ö–ê –õ–û–ö–ê–õ–¨–ù–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"
echo "----------------------------------"

if [[ -f ".bazelrc.local" ]]; then
    echo "‚úÖ .bazelrc.local —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
    head -10 .bazelrc.local | sed 's/^/   /'
    if [[ $(wc -l < .bazelrc.local) -gt 10 ]]; then
        echo "   ... (–ø–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫)"
    fi
else
    echo "‚ö†Ô∏è  .bazelrc.local –Ω–µ –Ω–∞–π–¥–µ–Ω - –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
echo ""
echo "‚öôÔ∏è  –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô"
echo "------------------------"

echo "–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
echo ""

echo "–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã:"
grep -E "^build:[a-zA-Z]" tools/bazel/configs/platforms.bazelrc 2>/dev/null | \
    sed 's/.*build:\([a-zA-Z0-9_-]*\).*/  \1/' | sort -u

echo ""
echo "–¶–µ–ª–µ–≤—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:"
grep -E "^build:[a-zA-Z]" tools/bazel/configs/targets.bazelrc 2>/dev/null | \
    sed 's/.*build:\([a-zA-Z0-9_-]*\).*/  \1/' | sort -u

echo ""
echo "–†–µ–∂–∏–º—ã:"
grep -E "^build:[a-zA-Z]" tools/bazel/configs/modes.bazelrc 2>/dev/null | \
    sed 's/.*build:\([a-zA-Z0-9_-]*\).*/  \1/' | sort -u

echo ""
echo "–ì–æ—Ç–æ–≤—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏:"
grep -E "^build:[a-zA-Z].*--config" .bazelrc 2>/dev/null | \
    sed 's/.*build:\([a-zA-Z0-9_-]*\).*/  \1/' | sort -u

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
echo ""
echo "üöÄ –ü–†–û–í–ï–†–ö–ê –°–ö–†–ò–ü–¢–û–í"
echo "--------------------"

SCRIPTS=(
    "tools/bazel/platform_detection.sh"
    "tools/bazel/build.sh"
)

for script in "${SCRIPTS[@]}"; do
    if [[ -x "$script" ]]; then
        echo "‚úÖ $script - –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    else
        echo "‚ùå $script - –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
        chmod +x "$script"
        echo "   üîß –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    fi
done

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ wrapper'–∞
echo ""
echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï WRAPPER'–ê"
echo "-------------------------"

echo "–¢–µ—Å—Ç 1: –°–ø—Ä–∞–≤–∫–∞"
if ./tools/bazel/build.sh help >/dev/null 2>&1; then
    echo "‚úÖ –°–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå –°–ø—Ä–∞–≤–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo "–¢–µ—Å—Ç 2: –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
if ./tools/bazel/build.sh configs >/dev/null 2>&1; then
    echo "‚úÖ –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo "–¢–µ—Å—Ç 3: –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º"
if ./tools/bazel/build.sh platforms >/dev/null 2>&1; then
    echo "‚úÖ –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo "üéØ –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê"
echo "===================="

if [[ "$ALL_FILES_OK" == "true" ]] && [[ "$IMPORTS_OK" == "true" ]]; then
    echo "‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Bazel –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
    echo ""
    echo "üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
    echo "  1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:"
    echo "     ./tools/bazel/build.sh init"
    echo ""
    echo "  2. –ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞:"
    echo "     bazel build //..."
    echo "     # –∏–ª–∏"
    echo "     ./tools/bazel/build.sh"
    echo ""
    echo "  3. –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
    echo "     bazel build --config=mac-dev //..."
    echo "     # –∏–ª–∏"
    echo "     ./tools/bazel/build.sh mac-dev"
    echo ""
    echo "  4. –° –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º:"
    echo "     bazel build --config=profile //..."
    echo ""
    echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: tools/bazel/README.md"
    
else
    echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!"
    exit 1
fi

echo ""
echo "üîç –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê:"
echo "===================="
tree tools/bazel/ 2>/dev/null || find tools/bazel/ -type f | sort