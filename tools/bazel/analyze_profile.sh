#!/bin/bash
# –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π Bazel

set -euo pipefail

echo "üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π Bazel"
echo "========================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π
PROFILES=()
[[ -f "profile.json" ]] && PROFILES+=("profile.json")
[[ -f "profile-slim.json" ]] && PROFILES+=("profile-slim.json")

if [[ ${#PROFILES[@]} -eq 0 ]]; then
    echo "‚ùå –ü—Ä–æ—Ñ–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
    echo ""
    echo "üí° –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å:"
    echo "   bazel build --config=profile //...       # –ü–æ–ª–Ω—ã–π"
    echo "   bazel build --config=profile-slim //...  # –ë—ã—Å—Ç—Ä—ã–π"
    exit 1
fi

echo "üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏:"
for profile in "${PROFILES[@]}"; do
    size=$(du -h "$profile" | cut -f1)
    echo "   ‚úÖ $profile ($size)"
done

echo ""

# –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
for profile in "${PROFILES[@]}"; do
    echo "üìà –ê–Ω–∞–ª–∏–∑: $profile"
    echo "$(printf '=%.0s' {1..50})"
    
    # –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    echo "‚è±Ô∏è  –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:"
    bazel analyze-profile "$profile" 2>/dev/null | grep -E "(Total|Critical path)" | head -10 || echo "–ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    
    echo ""
    echo "ÔøΩ –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:"
    echo "   –†–∞–∑–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è: $(du -h "$profile" | cut -f1)"
    echo "   –°–æ–∑–¥–∞–Ω: $(stat -f %Sm "$profile")"
    
    echo ""
    echo "$(printf '=%.0s' {1..50})"
    echo ""
done

echo "üîó –í–µ–±-–∞–Ω–∞–ª–∏–∑:"
echo "=============="
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://ui.perfetto.dev/"
echo "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å: ${PROFILES[0]}"
echo "3. –ò–∑—É—á–∏—Ç–µ Timeline –∏ Action Graph"

echo ""
echo "üìã CLI –∫–æ–º–∞–Ω–¥—ã:"
echo "==============="
echo "# –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑"
echo "bazel analyze-profile ${PROFILES[0]}"
echo ""
echo "# HTML –æ—Ç—á–µ—Ç"
echo "bazel analyze-profile --html --html_details ${PROFILES[0]}"
echo ""
echo "# CSV —ç–∫—Å–ø–æ—Ä—Ç"
echo "bazel analyze-profile --dump=action --format=csv ${PROFILES[0]} > actions.csv"

echo ""
echo "üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
if [[ -f "profile.json" ]]; then
    profile_size=$(stat -f%z "profile.json")
    if [[ $profile_size -gt 1000000 ]]; then
        echo "‚ö†Ô∏è  –ë–æ–ª—å—à–æ–π –ø—Ä–æ—Ñ–∏–ª—å (${profile_size} bytes) - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ --config=profile-slim"
    fi
fi

echo "üöÄ –ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: bazel build --config=profile-slim //..."
echo "üîç –î–µ—Ç–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: bazel build --config=profile //..."
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º: bazel clean --expunge"